#!/bin/sh
BUILD_MAC=1
BUILD_WIN32=1
BUILD_LINUX=1

PYTHONEXT_URL=http://www.zotero.org/download/integration/pythonext-2.6.2.20100203-Darwin_universal.xpi
MACWORD_URL=http://www.zotero.org/download/dev/Zotero-MacWord-Plugin-trunk.xpi
WINWORD_URL=http://www.zotero.org/download/dev/Zotero-WinWord-Plugin-trunk.xpi
OOO_URL=http://www.zotero.org/download/dev/Zotero-OpenOffice-Plugin-trunk.xpi
JEP_URL=http://downloads.sourceforge.net/project/javaplugin/javaplugin/0.9.7.3/JavaEmbeddingPlugin0.9.7.3.zip?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fjavaplugin%2F&ts=1286051303&use_mirror=cdnetworks-us-2

MAC_RUNTIME_PATH=/Library/Frameworks/XUL.framework
WIN32_RUNTIME_PATH=`pwd`/xulrunner_win32
LINUX_RUNTIME_PATH=`pwd`/xulrunner_linux-i686

# Can be found at http://sourceforge.net/projects/javaplugin/
# This should be the path to the "Binaries" directory included in the archive
JAVA_EMBEDDING_PLUGIN_BINARY_PATH=`pwd`/JavaEmbeddingPlugin

RAN=`uuidgen | head -c 8`  # Get random 8-character string for build directory
CALLDIR=`pwd`
BUILDDIR=/tmp/zotero-build-$RAN
SVNPREFIX="https://www.zotero.org/svn/extension/"
SVNPATH="$1" # e.g. branches/1.0, defaults to "trunk"
REV="$2" # Revision normally supplied by SVN post-commit script (to speed things up) or left blank

mkdir $BUILDDIR

if [ -z $SVNPATH ]; then SVNPATH="trunk"; fi
URL=${SVNPREFIX}${SVNPATH}/

# If revision not supplied, checkout and use svnversion to get latest revision
if [ -z $REV ]; then
	echo "Getting latest Zotero revision"
	svn co --quiet --non-interactive $URL $BUILDDIR/zotero
	cd $BUILDDIR/zotero
	REV=`svnversion .`
	cd ..
	rm -rf $BUILDDIR/zotero
fi

# Export a clean copy of the tree
echo "Checking out Zotero r$REV"
svn export --quiet --non-interactive $URL $BUILDDIR/zotero

# Zip chrome into JAR and adjust chrome.manifest
cd $BUILDDIR/zotero/chrome
# Checkout failed -- bail
if [ $? -eq 1 ]; then
	exit;
fi

# Adjust connector pref
perl -pi -e 's/pref\("extensions\.zotero\.connector\.enabled", false\);/pref("extensions.zotero.connector.enabled", true);/g' $BUILDDIR/zotero/defaults/preferences/zotero.js

zip -0 -r -q ../zotero.jar .
rm -rf $BUILDDIR/zotero/chrome/*
mv ../zotero.jar .
cd ..

# Build translators.zip
if [ -d translators ]; then
	echo "Building translators.zip"
	
	cd translators
	mkdir output
	counter=0;
	for file in *.js; do
		newfile=$counter.js;
		cp "$file" output/$newfile;
		counter=$(($counter+1))
	done;
	cd output
	zip -q ../../translators.zip *
	cd ../..
	rm -rf translators
fi

# Build styles.zip with default styles
if [ -d styles ]; then
	echo "Building styles.zip"
	
	cd styles
	for i in *.csl; do
		svn export --quiet --non-interactive https://www.zotero.org/svn/csl/$i;
	done
	zip -q ../styles.zip *
	cd ..
	rm -rf styles
fi
	
echo "Retrieving Zotero OpenOffice.org Integration"
cd ..
curl -s $OOO_URL -o ooo.zip

# Mac
if [ $BUILD_MAC == 1 ]; then
	echo "Retrieving PythonExt"
	curl -s $PYTHONEXT_URL -o pythonext.zip
	
	echo "Retrieving Zotero MacWord Integration"
	curl -s $MACWORD_URL -o macword.zip
	
	echo 'Building Zotero.app'
	APPDIR=$CALLDIR/Zotero.app
	mkdir $APPDIR
	chmod 755 $APPDIR
	cp -r $CALLDIR/Contents $APPDIR
	CONTENTSDIR=$APPDIR/Contents
	
	mkdir $CONTENTSDIR/MacOS
	mkdir $CONTENTSDIR/Frameworks
	cp -a $MAC_RUNTIME_PATH $CONTENTSDIR/Frameworks/XUL.framework
	ln -s ../Frameworks/XUL.framework/Versions/Current/xulrunner $CONTENTSDIR/MacOS/zotero
	cp $CALLDIR/application.ini $CONTENTSDIR/Resources
	
	cp -r $BUILDDIR/zotero/* $CONTENTSDIR/Resources
	cp $CALLDIR/prefs.js $CONTENTSDIR/Resources/defaults/preferences
	cp $CALLDIR/chrome.manifest $CONTENTSDIR/Resources/chrome/chrome.manifest
	
	mkdir $CONTENTSDIR/Resources/plugins
	cp -r $JAVA_EMBEDDING_PLUGIN_BINARY_PATH/* $CONTENTSDIR/Resources/plugins
	
	mkdir $CONTENTSDIR/Resources/extensions
	unzip -q $BUILDDIR/pythonext.zip -d $CONTENTSDIR/Resources/extensions/pythonext@mozdev.org
	unzip -q $BUILDDIR/macword.zip -d $CONTENTSDIR/Resources/extensions/zoteroMacWordIntegration@zotero.org
	unzip -q $BUILDDIR/ooo.zip -d $CONTENTSDIR/Resources/extensions/zoteroOpenOfficeIntegration@zotero.org
fi

# Win32
if [ $BUILD_WIN32 == 1 ]; then
	echo "Retrieving Zotero WinWord Integration"
	curl -s $WINWORD_URL -o winword.zip
	
	echo 'Building Zotero_Win32'
	APPDIR=$CALLDIR/Zotero_Win32
	mkdir $APPDIR
	
	cp -r $BUILDDIR/zotero/* $CALLDIR/application.ini $APPDIR
	cp -r $WIN32_RUNTIME_PATH $APPDIR/xulrunner
	cp $CALLDIR/prefs.js $APPDIR/defaults/preferences
	cp $CALLDIR/chrome.manifest $APPDIR/chrome/chrome.manifest
	mv $APPDIR/xulrunner/xulrunner-stub.exe $APPDIR/zotero.exe
	
	mkdir $APPDIR/extensions
	unzip -q $BUILDDIR/ooo.zip -d $APPDIR/extensions/zoteroOpenOfficeIntegration@zotero.org
	unzip -q $BUILDDIR/winword.zip -d $APPDIR/extensions/zoteroWinWordIntegration@zotero.org
fi

# Linux
if [ $BUILD_LINUX == 1 ]; then
	echo 'Building Zotero_Linux-i686'
	APPDIR=$CALLDIR/Zotero_Linux-i686
	mkdir $APPDIR
	
	cp -r $BUILDDIR/zotero/* $CALLDIR/application.ini $APPDIR
	cp -r $LINUX_RUNTIME_PATH $APPDIR/xulrunner
	cp $CALLDIR/prefs.js $APPDIR/defaults/preferences
	cp $CALLDIR/chrome.manifest $APPDIR/chrome/chrome.manifest
	mv $APPDIR/xulrunner/xulrunner-stub $APPDIR/zotero
	chmod 755 $APPDIR/zotero
	
	mkdir $APPDIR/extensions
	unzip -q $BUILDDIR/ooo.zip -d $APPDIR/extensions/zoteroOpenOfficeIntegration@zotero.org
fi

rm -rf $BUILDDIR